{"version":3,"sources":["utils/utils.js","components/Benefit.js","container/Main.js","App.js","index.js"],"names":["validateAddress","str","test","validateCity","validateState","validateZip","validateField","type","value","validateMiddleName","validateDOB","validateLegalEntity","validateCountry","validateSSN","validateOwnership","validateRole","OwnershipRanges","range","i","step","push","text","toFixed","console","log","OwnershipRange","countryMap","code","roleMap","Benefit","props","index","deleteForm","handleFormChange","currentErrorForm","formError","filter","form","Grid","Row","columns","Column","Form","Group","widths","Field","id","required","control","Input","label","onChange","placeholder","error","firstName","lastName","middleName","dob","address","city","state","zip","Select","search","options","country","ssn","ownership","role","Button","negative","onClick","e","App","useState","legalEntity","legalEntityAddress","legalEntityCity","legalEntityState","legalEntityZip","legal","setLegal","setError","curr","setCurr","setForm","setFormError","isValidated","setIsValidated","handleChange","name","prev","useEffect","Object","values","map","item","reduce","acc","regex","f","validateController","parseFloat","BenefitProps","className","container","Header","as","Segment","List","ordered","Item","icon","labelPosition","disabled","length","Icon","fluid","path","exact","component","Main","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b92127e.chunk.js","sourcesContent":["export function validateFirstName (str) {\n    const regex = /[A-Za-z ,.'-]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateLastName (str) {\n    const regex = /[A-Za-z ,.'-]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateMiddleName (str) {\n    const regex = /[A-Za-z ,.'-]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateDOB (str) {\n    const regex = /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateLegalEntity (str) {\n    const regex = /[a-zA-Z0-9_ ]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateAddress (str) {\n    const regex = /[a-zA-Z0-9_ ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateCity (str) {\n    const regex = /[a-zA-Z0-9_ ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateState (str) {\n    const regex = /[a-zA-Z]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateZip (str) {\n    const regex = /^(\\d{5})?$/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateCountry (str) {\n    const regex = /[a-zA-Z ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateSSN (str) {\n    const regex = /\\d{3}[-]?\\d{2}[-]?\\d{4}/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateOwnership (str) {\n    const regex = /^([01])?([.]?\\d{0,2})?$/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateRole (str) {\n    const regex = /[a-zA-Z ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateField(type, value) {\n    switch (type) {\n    // legal formfields\n    case 'firstName':\n        return validateFirstName(value);\n    case 'lastName':\n        return validateLastName(value);\n    case 'middleName':\n        return validateMiddleName(value);\n    case 'dob':\n        return validateDOB(value);\n    case 'legalEntity':\n        return validateLegalEntity(value);\n    case 'legalEntityAddress':\n        return validateAddress(value);\n    case 'legalEntityCity':\n        return validateCity(value);\n    case 'legalEntityState':\n        return validateState(value);\n    case 'legalEntityZip':\n        return validateZip(value);\n    // beneficial formfields\n    case 'address':\n        return validateAddress(value);\n    case 'city':\n        return validateCity(value);\n    case 'state':\n        return validateState(value);\n    case 'zip':\n        return validateZip(value);\n    case 'country':\n        return validateCountry(value);\n    case 'ssn':\n        return validateSSN(value);\n    case 'ownership':\n        return validateOwnership(value);\n    case 'role':\n        return validateRole(value);\n    }\n}\n\nfunction OwnershipRange() {\n    var range = [];\n    for (var i = 0; i < 101; i++) {\n        let step = i * 0.01;\n        range.push({ text: step.toFixed(2), value: step.toFixed(2) })\n    }\n    console.log('range', range);\n    return range;\n}\n\nexport const OwnershipRanges = OwnershipRange();\n\nexport const countryMap = [ \n  { text: 'Afghanistan', value: 'AF'}, \n  { text: 'Åland Islands', value: 'AX'}, \n  { text: 'Albania', value: 'AL'}, \n  { text: 'Algeria', value: 'DZ'}, \n  { text: 'American Samoa', value: 'AS'}, \n  { text: 'AndorrA', value: 'AD'}, \n  { text: 'Angola', value: 'AO'}, \n  { text: 'Anguilla', value: 'AI'}, \n  { text: 'Antarctica', value: 'AQ'}, \n  { text: 'Antigua and Barbuda', value: 'AG'}, \n  { text: 'Argentina', value: 'AR'}, \n  { text: 'Armenia', value: 'AM'}, \n  { text: 'Aruba', value: 'AW'}, \n  { text: 'Australia', value: 'AU'}, \n  { text: 'Austria', value: 'AT'}, \n  { text: 'Azerbaijan', value: 'AZ'}, \n  { text: 'Bahamas', value: 'BS'}, \n  { text: 'Bahrain', value: 'BH'}, \n  { text: 'Bangladesh', value: 'BD'}, \n  { text: 'Barbados', value: 'BB'}, \n  { text: 'Belarus', value: 'BY'}, \n  { text: 'Belgium', value: 'BE'}, \n  { text: 'Belize', value: 'BZ'}, \n  { text: 'Benin', value: 'BJ'}, \n  { text: 'Bermuda', value: 'BM'}, \n  { text: 'Bhutan', value: 'BT'}, \n  { text: 'Bolivia', value: 'BO'}, \n  { text: 'Bosnia and Herzegovina', value: 'BA'}, \n  { text: 'Botswana', value: 'BW'}, \n  { text: 'Bouvet Island', value: 'BV'}, \n  { text: 'Brazil', value: 'BR'}, \n  { text: 'British Indian Ocean Territory', value: 'IO'}, \n  { text: 'Brunei Darussalam', value: 'BN'}, \n  { text: 'Bulgaria', value: 'BG'}, \n  { text: 'Burkina Faso', value: 'BF'}, \n  { text: 'Burundi', value: 'BI'}, \n  { text: 'Cambodia', value: 'KH'}, \n  { text: 'Cameroon', value: 'CM'}, \n  { text: 'Canada', value: 'CA'}, \n  { text: 'Cape Verde', value: 'CV'}, \n  { text: 'Cayman Islands', value: 'KY'}, \n  { text: 'Central African Republic', value: 'CF'}, \n  { text: 'Chad', value: 'TD'}, \n  { text: 'Chile', value: 'CL'}, \n  { text: 'China', value: 'CN'}, \n  { text: 'Christmas Island', value: 'CX'}, \n  { text: 'Cocos (Keeling) Islands', value: 'CC'}, \n  { text: 'Colombia', value: 'CO'}, \n  { text: 'Comoros', value: 'KM'}, \n  { text: 'Congo', value: 'CG'}, \n  { text: 'Congo, The Democratic Republic of the', value: 'CD'}, \n  { text: 'Cook Islands', code: 'CK'}, \n  { text: 'Costa Rica', value: 'CR'}, \n  { text: 'Cote D\\'Ivoire', value: 'CI'}, \n  { text: 'Croatia', value: 'HR'}, \n  { text: 'Cuba', value: 'CU'}, \n  { text: 'Cyprus', value: 'CY'}, \n  { text: 'Czech Republic', value: 'CZ'}, \n  { text: 'Denmark', value: 'DK'}, \n  { text: 'Djibouti', value: 'DJ'}, \n  { text: 'Dominica', value: 'DM'}, \n  { text: 'Dominican Republic', value: 'DO'}, \n  { text: 'Ecuador', value: 'EC'}, \n  { text: 'Egypt', value: 'EG'}, \n  { text: 'El Salvador', value: 'SV'}, \n  { text: 'Equatorial Guinea', value: 'GQ'}, \n  { text: 'Eritrea', value: 'ER'}, \n  { text: 'Estonia', value: 'EE'}, \n  { text: 'Ethiopia', value: 'ET'}, \n  { text: 'Falkland Islands (Malvinas)', value: 'FK'}, \n  { text: 'Faroe Islands', value: 'FO'}, \n  { text: 'Fiji', value: 'FJ'}, \n  { text: 'Finland', value: 'FI'}, \n  { text: 'France', value: 'FR'}, \n  { text: 'French Guiana', value: 'GF'}, \n  { text: 'French Polynesia', value: 'PF'}, \n  { text: 'French Southern Territories', value: 'TF'}, \n  { text: 'Gabon', value: 'GA'}, \n  { text: 'Gambia', value: 'GM'}, \n  { text: 'Georgia', value: 'GE'}, \n  { text: 'Germany', value: 'DE'}, \n  { text: 'Ghana', value: 'GH'}, \n  { text: 'Gibraltar', value: 'GI'}, \n  { text: 'Greece', value: 'GR'}, \n  { text: 'Greenland', value: 'GL'}, \n  { text: 'Grenada', value: 'GD'}, \n  { text: 'Guadeloupe', value: 'GP'}, \n  { text: 'Guam', value: 'GU'}, \n  { text: 'Guatemala', value: 'GT'}, \n  { text: 'Guernsey', value: 'GG'}, \n  { text: 'Guinea', value: 'GN'}, \n  { text: 'Guinea-Bissau', value: 'GW'}, \n  { text: 'Guyana', value: 'GY'}, \n  { text: 'Haiti', value: 'HT'}, \n  { text: 'Heard Island and Mcdonald Islands', value: 'HM'}, \n  { text: 'Holy See (Vatican City State)', value: 'VA'}, \n  { text: 'Honduras', value: 'HN'}, \n  { text: 'Hong Kong', value: 'HK'}, \n  { text: 'Hungary', value: 'HU'}, \n  { text: 'Iceland', value: 'IS'}, \n  { text: 'India', value: 'IN'}, \n  { text: 'Indonesia', value: 'ID'}, \n  { text: 'Iran, Islamic Republic Of', value: 'IR'}, \n  { text: 'Iraq', value: 'IQ'}, \n  { text: 'Ireland', value: 'IE'}, \n  { text: 'Isle of Man', value: 'IM'}, \n  { text: 'Israel', value: 'IL'}, \n  { text: 'Italy', value: 'IT'}, \n  { text: 'Jamaica', value: 'JM'}, \n  { text: 'Japan', value: 'JP'}, \n  { text: 'Jersey', value: 'JE'}, \n  { text: 'Jordan', value: 'JO'}, \n  { text: 'Kazakhstan', value: 'KZ'}, \n  { text: 'Kenya', value: 'KE'}, \n  { text: 'Kiribati', value: 'KI'}, \n  { text: 'Korea, Democratic People\\'S Republic of', value: 'KP'}, \n  { text: 'Korea, Republic of', code: 'KR'}, \n  { text: 'Kuwait', value: 'KW'}, \n  { text: 'Kyrgyzstan', value: 'KG'}, \n  { text: 'Lao People\\'S Democratic Republic', value: 'LA'}, \n  { text: 'Latvia', code: 'LV'}, \n  { text: 'Lebanon', value: 'LB'}, \n  { text: 'Lesotho', value: 'LS'}, \n  { text: 'Liberia', value: 'LR'}, \n  { text: 'Libyan Arab Jamahiriya', value: 'LY'}, \n  { text: 'Liechtenstein', value: 'LI'}, \n  { text: 'Lithuania', value: 'LT'}, \n  { text: 'Luxembourg', value: 'LU'}, \n  { text: 'Macao', value: 'MO'}, \n  { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK'}, \n  { text: 'Madagascar', code: 'MG'}, \n  { text: 'Malawi', value: 'MW'}, \n  { text: 'Malaysia', value: 'MY'}, \n  { text: 'Maldives', value: 'MV'}, \n  { text: 'Mali', value: 'ML'}, \n  { text: 'Malta', value: 'MT'}, \n  { text: 'Marshall Islands', value: 'MH'}, \n  { text: 'Martinique', value: 'MQ'}, \n  { text: 'Mauritania', value: 'MR'}, \n  { text: 'Mauritius', value: 'MU'}, \n  { text: 'Mayotte', value: 'YT'}, \n  { text: 'Mexico', value: 'MX'}, \n  { text: 'Micronesia, Federated States of', value: 'FM'}, \n  { text: 'Moldova, Republic of', value: 'MD'}, \n  { text: 'Monaco', value: 'MC'}, \n  { text: 'Mongolia', value: 'MN'}, \n  { text: 'Montserrat', value: 'MS'}, \n  { text: 'Morocco', value: 'MA'}, \n  { text: 'Mozambique', value: 'MZ'}, \n  { text: 'Myanmar', value: 'MM'}, \n  { text: 'Namibia', value: 'NA'}, \n  { text: 'Nauru', value: 'NR'}, \n  { text: 'Nepal', value: 'NP'}, \n  { text: 'Netherlands', value: 'NL'}, \n  { text: 'Netherlands Antilles', value: 'AN'}, \n  { text: 'New Caledonia', value: 'NC'}, \n  { text: 'New Zealand', value: 'NZ'}, \n  { text: 'Nicaragua', value: 'NI'}, \n  { text: 'Niger', value: 'NE'}, \n  { text: 'Nigeria', value: 'NG'}, \n  { text: 'Niue', value: 'NU'}, \n  { text: 'Norfolk Island', value: 'NF'}, \n  { text: 'Northern Mariana Islands', value: 'MP'}, \n  { text: 'Norway', value: 'NO'}, \n  { text: 'Oman', value: 'OM'}, \n  { text: 'Pakistan', value: 'PK'}, \n  { text: 'Palau', value: 'PW'}, \n  { text: 'Palestinian Territory, Occupied', value: 'PS'}, \n  { text: 'Panama', value: 'PA'}, \n  { text: 'Papua New Guinea', value: 'PG'}, \n  { text: 'Paraguay', value: 'PY'}, \n  { text: 'Peru', value: 'PE'}, \n  { text: 'Philippines', value: 'PH'}, \n  { text: 'Pitcairn', value: 'PN'}, \n  { text: 'Poland', value: 'PL'}, \n  { text: 'Portugal', value: 'PT'}, \n  { text: 'Puerto Rico', value: 'PR'}, \n  { text: 'Qatar', value: 'QA'}, \n  { text: 'Reunion', value: 'RE'}, \n  { text: 'Romania', value: 'RO'}, \n  { text: 'Russian Federation', value: 'RU'}, \n  { text: 'RWANDA', value: 'RW'}, \n  { text: 'Saint Helena', value: 'SH'}, \n  { text: 'Saint Kitts and Nevis', value: 'KN'}, \n  { text: 'Saint Lucia', value: 'LC'}, \n  { text: 'Saint Pierre and Miquelon', value: 'PM'}, \n  { text: 'Saint Vincent and the Grenadines', value: 'VC'}, \n  { text: 'Samoa', value: 'WS'}, \n  { text: 'San Marino', value: 'SM'}, \n  { text: 'Sao Tome and Principe', value: 'ST'}, \n  { text: 'Saudi Arabia', value: 'SA'}, \n  { text: 'Senegal', value: 'SN'}, \n  { text: 'Serbia and Montenegro', value: 'CS'}, \n  { text: 'Seychelles', value: 'SC'}, \n  { text: 'Sierra Leone', value: 'SL'}, \n  { text: 'Singapore', value: 'SG'}, \n  { text: 'Slovakia', value: 'SK'}, \n  { text: 'Slovenia', value: 'SI'}, \n  { text: 'Solomon Islands', value: 'SB'}, \n  { text: 'Somalia', value: 'SO'}, \n  { text: 'South Africa', value: 'ZA'}, \n  { text: 'South Georgia and the South Sandwich Islands', value: 'GS'}, \n  { text: 'Spain', value: 'ES'}, \n  { text: 'Sri Lanka', value: 'LK'}, \n  { text: 'Sudan', value: 'SD'}, \n  { text: 'Suriname', value: 'SR'}, \n  { text: 'Svalbard and Jan Mayen', value: 'SJ'}, \n  { text: 'Swaziland', value: 'SZ'}, \n  { text: 'Sweden', value: 'SE'}, \n  { text: 'Switzerland', value: 'CH'}, \n  { text: 'Syrian Arab Republic', value: 'SY'}, \n  { text: 'Taiwan, Province of China', value: 'TW'}, \n  { text: 'Tajikistan', value: 'TJ'}, \n  { text: 'Tanzania, United Republic of', value: 'TZ'}, \n  { text: 'Thailand', value: 'TH'}, \n  { text: 'Timor-Leste', value: 'TL'}, \n  { text: 'Togo', value: 'TG'}, \n  { text: 'Tokelau', value: 'TK'}, \n  { text: 'Tonga', value: 'TO'}, \n  { text: 'Trinidad and Tobago', value: 'TT'}, \n  { text: 'Tunisia', value: 'TN'}, \n  { text: 'Turkey', value: 'TR'}, \n  { text: 'Turkmenistan', value: 'TM'}, \n  { text: 'Turks and Caicos Islands', value: 'TC'}, \n  { text: 'Tuvalu', value: 'TV'}, \n  { text: 'Uganda', value: 'UG'}, \n  { text: 'Ukraine', value: 'UA'}, \n  { text: 'United Arab Emirates', value: 'AE'}, \n  { text: 'United Kingdom', value: 'GB'}, \n  { text: 'United States', value: 'US'}, \n  { text: 'United States Minor Outlying Islands', value: 'UM'}, \n  { text: 'Uruguay', value: 'UY'}, \n  { text: 'Uzbekistan', value: 'UZ'}, \n  { text: 'Vanuatu', value: 'VU'}, \n  { text: 'Venezuela', value: 'VE'}, \n  { text: 'Viet Nam', value: 'VN'}, \n  { text: 'Virgin Islands, British', value: 'VG'}, \n  { text: 'Virgin Islands, U.S.', value: 'VI'}, \n  { text: 'Wallis and Futuna', value: 'WF'}, \n  { text: 'Western Sahara', value: 'EH'}, \n  { text: 'Yemen', value: 'YE'}, \n  { text: 'Zambia', value: 'ZM'}, \n  { text: 'Zimbabwe', value: 'ZW'} \n]\n\nexport const roleMap = [ \n    { text: 'Chief Executive Officer', value: 'Chief Executive Officer'}, \n    { text: 'Chief Financial Officer', value: 'Chief Financial Officer'}, \n    { text: 'Chief Operating Officer', value: 'Chief Operating Officer'}, \n    { text: 'Managing Member', value: 'Managing Member'}, \n    { text: 'General Partner', value: 'General Partner'}, \n    { text: 'President', value: 'President'}, \n    { text: 'Vice President', value: 'Vice President'}, \n    { text: 'Treasurer', value: 'Treasurer'}, \n    { text: 'Controller', value: 'Controller'}, \n    { text: 'Others', value: 'Others'},\n];\n\nexport const stateMap = {\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n}\n\nexport default { \n    validateField,\n    OwnershipRanges\n}","import { useState } from 'react';\nimport { Input, Grid, Form, Button, Select } from 'semantic-ui-react'\nimport {\n    countryMap,\n    roleMap,\n    OwnershipRanges\n} from '../utils/utils';\n  \nconst Benefit = (props) => {\n    const { index, deleteForm, handleFormChange, formError } = props;\n    const currentErrorForm = formError.filter((form) => form.index === index)[0]\n\n    return <Grid.Row columns={1}>\n        <Grid.Column>\n            <Form>\n                <Form.Group widths='equal'>\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='First Name'\n                        type={'firstName'}\n                        onChange={handleFormChange}\n                        placeholder='Last name'\n                        error={currentErrorForm.firstName}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='Last Name'\n                        type={'lastName'}\n                        onChange={handleFormChange}\n                        placeholder='First name'\n                        error={currentErrorForm.lastName}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='Middle Name.'\n                        type={'middleName'}\n                        onChange={handleFormChange}\n                        placeholder='Middle Name'\n                        error={currentErrorForm.middleName}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='Date of Birth (mm/dd/yyyy)'\n                        type={'dob'}\n                        onChange={handleFormChange}\n                        placeholder='Date of Birth'\n                        error={currentErrorForm.dob}\n                    />\n\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='Address'\n                        type={'address'}\n                        onChange={handleFormChange}\n                        placeholder='Address'\n                        error={currentErrorForm.address}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='City'\n                        type={'city'}\n                        onChange={handleFormChange}\n                        placeholder='City'\n                        error={currentErrorForm.city}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='State'\n                        type={'state'}\n                        onChange={handleFormChange}\n                        placeholder='Last name'\n                        error={currentErrorForm.state}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='ZIP/Postal Code'\n                        type={'zip'}\n                        onChange={handleFormChange}\n                        placeholder='ZIP/Postal Code'\n                        error={currentErrorForm.zip}\n                    />\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Select}\n                        label='Country'\n                        type={'country'}\n                        search\n                        options={countryMap}\n                        onChange={handleFormChange}\n                        placeholder='First name'\n                        error={currentErrorForm.country}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Input}\n                        label='SSN'\n                        type={'ssn'}\n                        onChange={handleFormChange}\n                        placeholder='SSN'\n                        error={currentErrorForm.ssn}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Select}\n                        label='Ownership Percentage (0.01 - 1.00)'\n                        type={'ownership'}\n                        search\n                        options={OwnershipRanges}\n                        onChange={handleFormChange}\n                        placeholder='Ownership Percentage'\n                        error={currentErrorForm.ownership}\n                    />\n                    <Form.Field\n                        id={index}\n                        required={true}\n                        control={Select}\n                        label='Role'\n                        type={'role'}\n                        search\n                        options={roleMap}\n                        onChange={handleFormChange}\n                        placeholder='Role'\n                        error={currentErrorForm.role}\n                    />\n                </Form.Group>\n                <Button id={index} negative onClick={(e) => {\n                    deleteForm(index)\n                }}>Delete</Button>\n            </Form>\n        </Grid.Column>\n    </Grid.Row>\n}\n\nexport default Benefit;","import { useState, useEffect } from 'react';\nimport {fetch as fetchPolyfill} from 'whatwg-fetch'\nimport { Segment, List, Icon, Input, Header, Grid, Form, Select, Button } from 'semantic-ui-react'\nimport Benefit from '../components/Benefit';\nimport {\n  validateField,\n  countryMap\n} from '../utils/utils';\n\nfunction App() {\n\n  const [legal, setLegal] = useState({\n    firstName: '',\n    lastName: '',\n    middleName: '',\n    legalEntity: '',\n    legalEntityAddress: '',\n    legalEntityCity: '',\n    legalEntityState: '',\n    legalEntityZip: ''\n  })\n  const [error, setError] = useState({\n    firstName: true,\n    lastName: true,\n    middleName: true,\n    legalEntity: true,\n    legalEntityAddress: true,\n    legalEntityCity: true,\n    legalEntityState: true,\n    legalEntityZip: true\n  })\n  const [curr, setCurr] = useState(1);\n  const [form, setForm] = useState([\n    {\n      index: 0,\n      firstName: '',\n      lastName: '',\n      middleName: '',\n      dob: '',\n      address: '',\n      city: '',\n      state: '',\n      zip: '',\n      country: '',\n      ssn: '',\n      ownership: '',\n      role: '',\n    }\n  ]);\n  const [formError, setFormError] = useState([\n    {\n      index: 0,\n      firstName: true,\n      lastName: true,\n      middleName: true,\n      dob: true,\n      address: true,\n      city: true,\n      state: true,\n      zip: true,\n      country: true,\n      ssn: true,\n      ownership: true,\n      role: true,\n    }\n  ]);\n  const [isValidated, setIsValidated] = useState(false);\n\n  const handleChange = (e, { name, type, value }) => {\n    console.log('handle change', value);\n    if (!validateField(type, value)) {\n      setError((prev) => ({ ...prev, [type]: 'Please enter a valid field' }));\n    } else {\n      setError((prev) => ({ ...prev, [type]: false }))\n    }\n    setLegal((prev) => ({ ...prev, [type]: value }))\n  }\n\n  const validateLegal = () => {\n    const checksum = Object.values(error).map(item => !!item).reduce((acc, item) => { return acc + item }, 0);\n    return checksum;\n  }\n\n  const validateBeneficial = () => {\n    const checksum = formError.reduce((acc, item) => {\n      const sum = Object.values(item).map((item, i) => i !== 0 && !!item).reduce((acc, item) => acc + item, 0);\n      return acc + sum\n    }, 0);\n    return checksum;\n  }\n\n  const validateController = () => {\n    const regex = /controller/i;\n    const anyTrue = form.map((f) => regex.test(f.role)).reduce((acc, item) => acc + item, 0);\n    if (anyTrue) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const validateOwnership = () => {\n    const ownershipTotal = form.map((f) => f.ownership).reduce((acc, item) => acc + parseFloat(item), 0);\n    if (ownershipTotal === 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // run validations on every error state changes, form error state changes\n  useEffect(() => {\n    if (validateLegal() === 0 && validateBeneficial() === 0 && validateController() && validateOwnership()) {\n      setIsValidated(true);\n    } else {\n      setIsValidated(false);\n    }\n  }, [error, formError])\n\n\n  const addForm = () => {\n    setCurr(curr + 1)\n    setForm((prev) => [...prev, {\n      index: curr,\n      firstName: '',\n      lastName: '',\n      middleName: '',\n      dob: '',\n      address: '',\n      city: '',\n      state: '',\n      zip: '',\n      country: '',\n      ssn: '',\n      ownership: '',\n      role: '',\n    }])\n    setFormError((prev) => [...prev, {\n      index: curr,\n      firstName: true,\n      lastName: true,\n      middleName: true,\n      dob: true,\n      address: true,\n      city: true,\n      state: true,\n      zip: true,\n      country: true,\n      ssn: true,\n      ownership: true,\n      role: true,\n    }])\n  };\n\n  const deleteForm = (id) => {\n    setForm((prev) => prev.filter((f) => f.index !== id))\n    setFormError((prev) => prev.filter((f) => f.index !== id))\n  };\n\n  const handleFormChange = (e, { name, type, id, value }) => {\n\n    if (!validateField(type, value)) {\n      setFormError([...formError].map((f) => {\n        if (f.index === id) {\n          return {\n            ...f,\n            [type]: 'Please enter a valid field'\n          }\n        } else {\n          return f;\n        }\n      }))\n    } else {\n      setFormError([...formError].map((f) => {\n        if (f.index === id) {\n          return {\n            ...f,\n            [type]: false\n          }\n        } else {\n          return f;\n        }\n      }))\n    }\n\n    setForm([...form].map((f) => {\n      if (f.index === id) {\n        return {\n          ...f,\n          [type]: value\n        }\n      } else {\n        return f;\n      }\n    }))\n  }\n\n  const submitForm = () => {\n    console.log('submitting legal', legal);\n    console.log('submitting form', form);\n  }\n\n  const BenefitProps = {\n    deleteForm: deleteForm,\n    handleFormChange: handleFormChange,\n    curr: curr,\n    setCurr: setCurr,\n    form: form,\n    setForm: setForm,\n    formError: formError,\n    setFormError: setFormError\n  }\n\n  return (\n    <div className=\"App\">\n      <Grid container>\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            <Header as='h1'>CERTIFICATE OF BENEFICIAL OWNER</Header>\n            <Segment>\n              The Information contained in this Certification is sought pursuant to <b>Section 1020.230 of Title 31</b> of the United States Code of Federal Regulations. (31 CFR 1020.230 - Beneficial Ownership Requirements for legal entity customers).\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            <Header as='h3'>LEGAL ENTITY</Header>\n            <Segment>Please enter the legal entity’s basic information, including the account holder's name, address, date of birth and address information.\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            <Form>\n              <Form.Group widths='equal'>\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'firstName'}\n                  onChange={handleChange}\n                  value={legal.firstName}\n                  label='First Name'\n                  placeholder='First name'\n                  error={error.firstName}\n                />\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'lastName'}\n                  onChange={handleChange}\n                  value={legal.lastName}\n                  label='Last Name'\n                  placeholder='Last name'\n                  error={error.lastName}\n                />\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'middleName'}\n                  onChange={handleChange}\n                  value={legal.middleName}\n                  label='Middle Name'\n                  placeholder='Middle Name'\n                  error={error.middleName}\n                />\n              </Form.Group>\n              <Form.Field\n                required={true}\n                control={Input}\n                type={'legalEntity'}\n                onChange={handleChange}\n                value={legal.legalEntity}\n                label='Legal Entity Name'\n                placeholder='Legal Entity Name'\n                error={error.legalEntity}\n              />\n              <Form.Group widths='equal'>\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'legalEntityAddress'}\n                  onChange={handleChange}\n                  value={legal.legalEntityAddress}\n                  label='Legal Entity Address'\n                  placeholder='Legal Entity Address'\n                  error={error.legalEntityAddress}\n                />\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'legalEntityCity'}\n                  onChange={handleChange}\n                  value={legal.legalEntityCity}\n                  label='Legal Entity City'\n                  placeholder='Legal Entity City'\n                  error={error.legalEntityCity}\n                />\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'legalEntityState'}\n                  onChange={handleChange}\n                  value={legal.legalEntityState}\n                  label='Legal Entity State'\n                  placeholder='Legal Entity State'\n                  error={error.legalEntityState}\n                />\n                <Form.Field\n                  required={true}\n                  control={Input}\n                  type={'legalEntityZip'}\n                  onChange={handleChange}\n                  value={legal.legalEntityZip}\n                  label='ZIP/Postal Code'\n                  placeholder='Legal Entity ZIP'\n                  error={error.legalEntityZip}\n                />\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            <Header as='h3'>BENEFICIAL OWNER</Header>\n            <Segment>Please enter the legal\n              entity’s <b>beneficial owner(s)</b>, including their name, address, date of birth and social security number (or passport number or\n              other similar information, in the case of Non-U.S. persons).\n            </Segment>\n            <Segment>\n              <div><b>Beneficial owners</b> are:</div>\n              <List ordered>\n                <List.Item>Each individual, if any, who owns, directly or indirectly, <b>25 percent or more of the equity interests</b> of the legal entity customer (e.g., each natural person that owns 25 percent or more of the shares of a corporation; and</List.Item>\n                <List.Item>An individual with significant responsibility for managing the legal entity customer <b>(e.g., a Chief Executive Officer, Chief Financial Officer, Chief Operating Officer, Managing Member, General Partner, President, Vice President, or Treasurer).</b></List.Item>\n              </List>\n            </Segment>\n            <Segment>\n              Make sure at least one of the beneficial owner is a controller and the ownership percentage pertains to 1.\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n\n        {form.map((f, i) => {\n          return <Benefit key={i} index={f.index} {...f} {...BenefitProps} />\n        })}\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            <Button icon labelPosition='right' onClick={addForm} disabled={(form.length > 5 ? true : false)}>\n              Add additional beneficial owner\n              <Icon name='plus' />\n            </Button>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            <Button fluid type='submit' disabled={!isValidated} onClick={submitForm}>Submit</Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Main from './container/Main'\n\nclass App extends Component {\n  render () {\n    return <Router>\n      <Switch>\n        <Route path='/' exact component={Main} />\n        {/* <Route path='/map' exact component={Map} /> */}\n      </Switch>\n    </Router>\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}