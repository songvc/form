[{"/Users/v/proc/fincen/src/reportWebVitals.js":"1","/Users/v/proc/fincen/src/index.js":"2","/Users/v/proc/fincen/src/App.js":"3","/Users/v/proc/fincen/src/container/Main.js":"4","/Users/v/proc/fincen/src/components/Benefit.js":"5","/Users/v/proc/fincen/src/utils/utils.js":"6","/Users/v/proc/fincen/src/hooks/useDebounce.js":"7"},{"size":362,"mtime":1606867141131,"results":"8","hashOfConfig":"9"},{"size":453,"mtime":1606880194492,"results":"10","hashOfConfig":"9"},{"size":397,"mtime":1606880128839,"results":"11","hashOfConfig":"9"},{"size":12438,"mtime":1606983098829,"results":"12","hashOfConfig":"9"},{"size":5629,"mtime":1606979909615,"results":"13","hashOfConfig":"9"},{"size":15169,"mtime":1606977862031,"results":"14","hashOfConfig":"9"},{"size":473,"mtime":1606980925993,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h42xys",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/v/proc/fincen/src/reportWebVitals.js",[],"/Users/v/proc/fincen/src/index.js",[],"/Users/v/proc/fincen/src/App.js",[],"/Users/v/proc/fincen/src/container/Main.js",["31","32","33","34","35"],"/Users/v/proc/fincen/src/components/Benefit.js",["36"],"/Users/v/proc/fincen/src/utils/utils.js",["37","38"],"export function validateFirstName (str) {\n    const regex = /[A-Za-z ,.'-]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateLastName (str) {\n    const regex = /[A-Za-z ,.'-]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateMiddleName (str) {\n    const regex = /[A-Za-z ,.'-]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateLegalEntity (str) {\n    const regex = /[a-zA-Z0-9_ ]/g;\n    if (regex.test(str)) {\n        return true \n    } else {\n        return false\n    }\n}\n\nexport function validateAddress (str) {\n    const regex = /[a-zA-Z0-9_ ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateCity (str) {\n    const regex = /[a-zA-Z0-9_ ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateState (str) {\n    const regex = /[a-zA-Z]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateZip (str) {\n    const regex = /^(\\d{5})?$/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateCountry (str) {\n    const regex = /[a-zA-Z ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateSSN (str) {\n    const regex = /\\d{3}[-]?\\d{2}[-]?\\d{4}/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateOwnership (str) {\n    const regex = /^([01])?([.]?\\d{0,2})?$/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateRole (str) {\n    const regex = /[a-zA-Z ]/g;\n    if (regex.test(str)) {\n    return true \n    } else {\n    return false\n    }\n}\n\nexport function validateField(type, value) {\n    switch (type) {\n    // legal formfields\n    case 'firstName':\n        return validateFirstName(value);\n    case 'lastName':\n        return validateLastName(value);\n    case 'middleName':\n        return validateMiddleName(value);\n    case 'legalEntity':\n        return validateLegalEntity(value);\n    case 'legalEntityAddress':\n        return validateAddress(value);\n    case 'legalEntityCity':\n        return validateCity(value);\n    case 'legalEntityState':\n        return validateState(value);\n    case 'legalEntityZip':\n        return validateZip(value);\n    // beneficial formfields\n    case 'address':\n        return validateAddress(value);\n    case 'city':\n        return validateCity(value);\n    case 'state':\n        return validateState(value);\n    case 'zip':\n        return validateZip(value);\n    case 'country':\n        return validateCountry(value);\n    case 'ssn':\n        return validateSSN(value);\n    case 'ownership':\n        return validateOwnership(value);\n    case 'role':\n        return validateRole(value);\n    }\n}\n\nfunction OwnershipRange() {\n    var range = [];\n    for (var i = 0; i < 101; i++) {\n        let step = i * 0.01;\n        range.push({ text: step.toFixed(2), value: step.toFixed(2) })\n    }\n    console.log('range', range);\n    return range;\n}\n\nexport const OwnershipRanges = OwnershipRange();\n\nexport const countryMap = [ \n  { text: 'Afghanistan', value: 'AF'}, \n  { text: 'Ã…land Islands', value: 'AX'}, \n  { text: 'Albania', value: 'AL'}, \n  { text: 'Algeria', value: 'DZ'}, \n  { text: 'American Samoa', value: 'AS'}, \n  { text: 'AndorrA', value: 'AD'}, \n  { text: 'Angola', value: 'AO'}, \n  { text: 'Anguilla', value: 'AI'}, \n  { text: 'Antarctica', value: 'AQ'}, \n  { text: 'Antigua and Barbuda', value: 'AG'}, \n  { text: 'Argentina', value: 'AR'}, \n  { text: 'Armenia', value: 'AM'}, \n  { text: 'Aruba', value: 'AW'}, \n  { text: 'Australia', value: 'AU'}, \n  { text: 'Austria', value: 'AT'}, \n  { text: 'Azerbaijan', value: 'AZ'}, \n  { text: 'Bahamas', value: 'BS'}, \n  { text: 'Bahrain', value: 'BH'}, \n  { text: 'Bangladesh', value: 'BD'}, \n  { text: 'Barbados', value: 'BB'}, \n  { text: 'Belarus', value: 'BY'}, \n  { text: 'Belgium', value: 'BE'}, \n  { text: 'Belize', value: 'BZ'}, \n  { text: 'Benin', value: 'BJ'}, \n  { text: 'Bermuda', value: 'BM'}, \n  { text: 'Bhutan', value: 'BT'}, \n  { text: 'Bolivia', value: 'BO'}, \n  { text: 'Bosnia and Herzegovina', value: 'BA'}, \n  { text: 'Botswana', value: 'BW'}, \n  { text: 'Bouvet Island', value: 'BV'}, \n  { text: 'Brazil', value: 'BR'}, \n  { text: 'British Indian Ocean Territory', value: 'IO'}, \n  { text: 'Brunei Darussalam', value: 'BN'}, \n  { text: 'Bulgaria', value: 'BG'}, \n  { text: 'Burkina Faso', value: 'BF'}, \n  { text: 'Burundi', value: 'BI'}, \n  { text: 'Cambodia', value: 'KH'}, \n  { text: 'Cameroon', value: 'CM'}, \n  { text: 'Canada', value: 'CA'}, \n  { text: 'Cape Verde', value: 'CV'}, \n  { text: 'Cayman Islands', value: 'KY'}, \n  { text: 'Central African Republic', value: 'CF'}, \n  { text: 'Chad', value: 'TD'}, \n  { text: 'Chile', value: 'CL'}, \n  { text: 'China', value: 'CN'}, \n  { text: 'Christmas Island', value: 'CX'}, \n  { text: 'Cocos (Keeling) Islands', value: 'CC'}, \n  { text: 'Colombia', value: 'CO'}, \n  { text: 'Comoros', value: 'KM'}, \n  { text: 'Congo', value: 'CG'}, \n  { text: 'Congo, The Democratic Republic of the', value: 'CD'}, \n  { text: 'Cook Islands', code: 'CK'}, \n  { text: 'Costa Rica', value: 'CR'}, \n  { text: 'Cote D\\'Ivoire', value: 'CI'}, \n  { text: 'Croatia', value: 'HR'}, \n  { text: 'Cuba', value: 'CU'}, \n  { text: 'Cyprus', value: 'CY'}, \n  { text: 'Czech Republic', value: 'CZ'}, \n  { text: 'Denmark', value: 'DK'}, \n  { text: 'Djibouti', value: 'DJ'}, \n  { text: 'Dominica', value: 'DM'}, \n  { text: 'Dominican Republic', value: 'DO'}, \n  { text: 'Ecuador', value: 'EC'}, \n  { text: 'Egypt', value: 'EG'}, \n  { text: 'El Salvador', value: 'SV'}, \n  { text: 'Equatorial Guinea', value: 'GQ'}, \n  { text: 'Eritrea', value: 'ER'}, \n  { text: 'Estonia', value: 'EE'}, \n  { text: 'Ethiopia', value: 'ET'}, \n  { text: 'Falkland Islands (Malvinas)', value: 'FK'}, \n  { text: 'Faroe Islands', value: 'FO'}, \n  { text: 'Fiji', value: 'FJ'}, \n  { text: 'Finland', value: 'FI'}, \n  { text: 'France', value: 'FR'}, \n  { text: 'French Guiana', value: 'GF'}, \n  { text: 'French Polynesia', value: 'PF'}, \n  { text: 'French Southern Territories', value: 'TF'}, \n  { text: 'Gabon', value: 'GA'}, \n  { text: 'Gambia', value: 'GM'}, \n  { text: 'Georgia', value: 'GE'}, \n  { text: 'Germany', value: 'DE'}, \n  { text: 'Ghana', value: 'GH'}, \n  { text: 'Gibraltar', value: 'GI'}, \n  { text: 'Greece', value: 'GR'}, \n  { text: 'Greenland', value: 'GL'}, \n  { text: 'Grenada', value: 'GD'}, \n  { text: 'Guadeloupe', value: 'GP'}, \n  { text: 'Guam', value: 'GU'}, \n  { text: 'Guatemala', value: 'GT'}, \n  { text: 'Guernsey', value: 'GG'}, \n  { text: 'Guinea', value: 'GN'}, \n  { text: 'Guinea-Bissau', value: 'GW'}, \n  { text: 'Guyana', value: 'GY'}, \n  { text: 'Haiti', value: 'HT'}, \n  { text: 'Heard Island and Mcdonald Islands', value: 'HM'}, \n  { text: 'Holy See (Vatican City State)', value: 'VA'}, \n  { text: 'Honduras', value: 'HN'}, \n  { text: 'Hong Kong', value: 'HK'}, \n  { text: 'Hungary', value: 'HU'}, \n  { text: 'Iceland', value: 'IS'}, \n  { text: 'India', value: 'IN'}, \n  { text: 'Indonesia', value: 'ID'}, \n  { text: 'Iran, Islamic Republic Of', value: 'IR'}, \n  { text: 'Iraq', value: 'IQ'}, \n  { text: 'Ireland', value: 'IE'}, \n  { text: 'Isle of Man', value: 'IM'}, \n  { text: 'Israel', value: 'IL'}, \n  { text: 'Italy', value: 'IT'}, \n  { text: 'Jamaica', value: 'JM'}, \n  { text: 'Japan', value: 'JP'}, \n  { text: 'Jersey', value: 'JE'}, \n  { text: 'Jordan', value: 'JO'}, \n  { text: 'Kazakhstan', value: 'KZ'}, \n  { text: 'Kenya', value: 'KE'}, \n  { text: 'Kiribati', value: 'KI'}, \n  { text: 'Korea, Democratic People\\'S Republic of', value: 'KP'}, \n  { text: 'Korea, Republic of', code: 'KR'}, \n  { text: 'Kuwait', value: 'KW'}, \n  { text: 'Kyrgyzstan', value: 'KG'}, \n  { text: 'Lao People\\'S Democratic Republic', value: 'LA'}, \n  { text: 'Latvia', code: 'LV'}, \n  { text: 'Lebanon', value: 'LB'}, \n  { text: 'Lesotho', value: 'LS'}, \n  { text: 'Liberia', value: 'LR'}, \n  { text: 'Libyan Arab Jamahiriya', value: 'LY'}, \n  { text: 'Liechtenstein', value: 'LI'}, \n  { text: 'Lithuania', value: 'LT'}, \n  { text: 'Luxembourg', value: 'LU'}, \n  { text: 'Macao', value: 'MO'}, \n  { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK'}, \n  { text: 'Madagascar', code: 'MG'}, \n  { text: 'Malawi', value: 'MW'}, \n  { text: 'Malaysia', value: 'MY'}, \n  { text: 'Maldives', value: 'MV'}, \n  { text: 'Mali', value: 'ML'}, \n  { text: 'Malta', value: 'MT'}, \n  { text: 'Marshall Islands', value: 'MH'}, \n  { text: 'Martinique', value: 'MQ'}, \n  { text: 'Mauritania', value: 'MR'}, \n  { text: 'Mauritius', value: 'MU'}, \n  { text: 'Mayotte', value: 'YT'}, \n  { text: 'Mexico', value: 'MX'}, \n  { text: 'Micronesia, Federated States of', value: 'FM'}, \n  { text: 'Moldova, Republic of', value: 'MD'}, \n  { text: 'Monaco', value: 'MC'}, \n  { text: 'Mongolia', value: 'MN'}, \n  { text: 'Montserrat', value: 'MS'}, \n  { text: 'Morocco', value: 'MA'}, \n  { text: 'Mozambique', value: 'MZ'}, \n  { text: 'Myanmar', value: 'MM'}, \n  { text: 'Namibia', value: 'NA'}, \n  { text: 'Nauru', value: 'NR'}, \n  { text: 'Nepal', value: 'NP'}, \n  { text: 'Netherlands', value: 'NL'}, \n  { text: 'Netherlands Antilles', value: 'AN'}, \n  { text: 'New Caledonia', value: 'NC'}, \n  { text: 'New Zealand', value: 'NZ'}, \n  { text: 'Nicaragua', value: 'NI'}, \n  { text: 'Niger', value: 'NE'}, \n  { text: 'Nigeria', value: 'NG'}, \n  { text: 'Niue', value: 'NU'}, \n  { text: 'Norfolk Island', value: 'NF'}, \n  { text: 'Northern Mariana Islands', value: 'MP'}, \n  { text: 'Norway', value: 'NO'}, \n  { text: 'Oman', value: 'OM'}, \n  { text: 'Pakistan', value: 'PK'}, \n  { text: 'Palau', value: 'PW'}, \n  { text: 'Palestinian Territory, Occupied', value: 'PS'}, \n  { text: 'Panama', value: 'PA'}, \n  { text: 'Papua New Guinea', value: 'PG'}, \n  { text: 'Paraguay', value: 'PY'}, \n  { text: 'Peru', value: 'PE'}, \n  { text: 'Philippines', value: 'PH'}, \n  { text: 'Pitcairn', value: 'PN'}, \n  { text: 'Poland', value: 'PL'}, \n  { text: 'Portugal', value: 'PT'}, \n  { text: 'Puerto Rico', value: 'PR'}, \n  { text: 'Qatar', value: 'QA'}, \n  { text: 'Reunion', value: 'RE'}, \n  { text: 'Romania', value: 'RO'}, \n  { text: 'Russian Federation', value: 'RU'}, \n  { text: 'RWANDA', value: 'RW'}, \n  { text: 'Saint Helena', value: 'SH'}, \n  { text: 'Saint Kitts and Nevis', value: 'KN'}, \n  { text: 'Saint Lucia', value: 'LC'}, \n  { text: 'Saint Pierre and Miquelon', value: 'PM'}, \n  { text: 'Saint Vincent and the Grenadines', value: 'VC'}, \n  { text: 'Samoa', value: 'WS'}, \n  { text: 'San Marino', value: 'SM'}, \n  { text: 'Sao Tome and Principe', value: 'ST'}, \n  { text: 'Saudi Arabia', value: 'SA'}, \n  { text: 'Senegal', value: 'SN'}, \n  { text: 'Serbia and Montenegro', value: 'CS'}, \n  { text: 'Seychelles', value: 'SC'}, \n  { text: 'Sierra Leone', value: 'SL'}, \n  { text: 'Singapore', value: 'SG'}, \n  { text: 'Slovakia', value: 'SK'}, \n  { text: 'Slovenia', value: 'SI'}, \n  { text: 'Solomon Islands', value: 'SB'}, \n  { text: 'Somalia', value: 'SO'}, \n  { text: 'South Africa', value: 'ZA'}, \n  { text: 'South Georgia and the South Sandwich Islands', value: 'GS'}, \n  { text: 'Spain', value: 'ES'}, \n  { text: 'Sri Lanka', value: 'LK'}, \n  { text: 'Sudan', value: 'SD'}, \n  { text: 'Suriname', value: 'SR'}, \n  { text: 'Svalbard and Jan Mayen', value: 'SJ'}, \n  { text: 'Swaziland', value: 'SZ'}, \n  { text: 'Sweden', value: 'SE'}, \n  { text: 'Switzerland', value: 'CH'}, \n  { text: 'Syrian Arab Republic', value: 'SY'}, \n  { text: 'Taiwan, Province of China', value: 'TW'}, \n  { text: 'Tajikistan', value: 'TJ'}, \n  { text: 'Tanzania, United Republic of', value: 'TZ'}, \n  { text: 'Thailand', value: 'TH'}, \n  { text: 'Timor-Leste', value: 'TL'}, \n  { text: 'Togo', value: 'TG'}, \n  { text: 'Tokelau', value: 'TK'}, \n  { text: 'Tonga', value: 'TO'}, \n  { text: 'Trinidad and Tobago', value: 'TT'}, \n  { text: 'Tunisia', value: 'TN'}, \n  { text: 'Turkey', value: 'TR'}, \n  { text: 'Turkmenistan', value: 'TM'}, \n  { text: 'Turks and Caicos Islands', value: 'TC'}, \n  { text: 'Tuvalu', value: 'TV'}, \n  { text: 'Uganda', value: 'UG'}, \n  { text: 'Ukraine', value: 'UA'}, \n  { text: 'United Arab Emirates', value: 'AE'}, \n  { text: 'United Kingdom', value: 'GB'}, \n  { text: 'United States', value: 'US'}, \n  { text: 'United States Minor Outlying Islands', value: 'UM'}, \n  { text: 'Uruguay', value: 'UY'}, \n  { text: 'Uzbekistan', value: 'UZ'}, \n  { text: 'Vanuatu', value: 'VU'}, \n  { text: 'Venezuela', value: 'VE'}, \n  { text: 'Viet Nam', value: 'VN'}, \n  { text: 'Virgin Islands, British', value: 'VG'}, \n  { text: 'Virgin Islands, U.S.', value: 'VI'}, \n  { text: 'Wallis and Futuna', value: 'WF'}, \n  { text: 'Western Sahara', value: 'EH'}, \n  { text: 'Yemen', value: 'YE'}, \n  { text: 'Zambia', value: 'ZM'}, \n  { text: 'Zimbabwe', value: 'ZW'} \n]\n\nexport const roleMap = [ \n    { text: 'Chief Executive Officer', value: 'Chief Executive Officer'}, \n    { text: 'Chief Financial Officer', value: 'Chief Financial Officer'}, \n    { text: 'Chief Operating Officer', value: 'Chief Operating Officer'}, \n    { text: 'Managing Member', value: 'Managing Member'}, \n    { text: 'General Partner', value: 'General Partner'}, \n    { text: 'President', value: 'President'}, \n    { text: 'Vice President', value: 'Vice President'}, \n    { text: 'Treasurer', value: 'Treasurer'}, \n    { text: 'Controller', value: 'Controller'}, \n    { text: 'Others', value: 'Others'},\n];\n\nexport const stateMap = {\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n}\n\nexport default { \n    validateField,\n    OwnershipRanges\n}","/Users/v/proc/fincen/src/hooks/useDebounce.js",["39"],{"ruleId":"40","severity":1,"message":"41","line":2,"column":18,"nodeType":"42","messageId":"43","endLine":2,"endColumn":31},{"ruleId":"40","severity":1,"message":"44","line":3,"column":58,"nodeType":"42","messageId":"43","endLine":3,"endColumn":64},{"ruleId":"40","severity":1,"message":"45","line":7,"column":3,"nodeType":"42","messageId":"43","endLine":7,"endColumn":13},{"ruleId":"40","severity":1,"message":"46","line":15,"column":10,"nodeType":"42","messageId":"43","endLine":15,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":138,"column":6,"nodeType":"49","endLine":138,"endColumn":24,"suggestions":"50"},{"ruleId":"40","severity":1,"message":"51","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":110,"column":5,"nodeType":"54","messageId":"55","endLine":145,"endColumn":6},{"ruleId":"56","severity":1,"message":"57","line":481,"column":1,"nodeType":"58","endLine":484,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":22,"column":3,"nodeType":"58","endLine":22,"endColumn":34},"no-unused-vars","'fetchPolyfill' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'countryMap' is defined but never used.","'isSearching' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'validateBeneficial', 'validateController', 'validateLegal', and 'validateOwnership'. Either include them or remove the dependency array.","ArrayExpression",["59"],"'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"60","fix":"61"},"Update the dependencies array to be: [error, formError, validateBeneficial, validateController, validateLegal, validateOwnership]",{"range":"62","text":"63"},[3665,3683],"[error, formError, validateBeneficial, validateController, validateLegal, validateOwnership]"]